{"version":3,"sources":["Navbar.js","RecipeInput.js","Recipe.js","RecipeList.js","RecipeApp.js","registerServiceWorker.js","index.js"],"names":["Navbar","onClick","this","props","onNewRecipe","Component","defaultProps","RecipeInput","state","title","instructions","ingredients","img","handleChange","bind","handleNewIngredient","handleChangeIng","handleSubmit","e","setState","target","name","value","index","Number","split","map","ing","i","preventDefault","onSave","onClose","inputs","className","key","type","size","autoComplete","placeholder","onChange","onSubmit","htmlFor","id","style","marginTop","rows","cols","alignSelf","marginRight","Recipe","onDelete","src","alt","RecipeList","recipes","r","RecipeApp","nextRecipeId","showForm","handleSave","recipe","prevState","newRecipe","filter","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+WAIMA,G,6KAUF,OACE,gCACE,4BAAI,0CACJ,6BACE,4BAAI,uBAAGC,QAASC,KAAKC,MAAMC,aAAvB,eACJ,4BAAI,oCACJ,4BAAI,qCACJ,4BAAI,gD,GAjBOC,cAAfL,EACGM,aAAe,CACpBF,YADoB,cAuBTJ,Q,OCzBTO,G,wDAMJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,MAAO,GACPC,aAAc,GACdC,YAAa,CAAC,IACdC,IAAK,IAGP,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAZH,E,yDAeNI,GACXhB,KAAKiB,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,0CAGvBJ,GAAI,IACfP,EAAeT,KAAKM,MAApBG,YACPT,KAAKiB,SAAS,CAACR,YAAY,GAAD,mBAAMA,GAAN,CAAmB,S,sCAG/BO,GACd,IAAMK,EAAQC,OAAON,EAAEE,OAAOC,KAAKI,MAAM,KAAK,IACxCd,EAAcT,KAAKM,MAAMG,YAAYe,KAAI,SAACC,EAAKC,GAAN,OAC7CA,IAAML,EAAQL,EAAEE,OAAOE,MAAQK,KAEjCzB,KAAKiB,SAAS,CAACR,kB,mCAGJO,GACXA,EAAEW,iBACF3B,KAAKC,MAAM2B,OAAX,eAAsB5B,KAAKM,QAC3BN,KAAKiB,SAAS,CACZV,MAAO,GACPC,aAAc,GACdC,YAAa,CAAC,IACdC,IAAK,O,+BAIC,IAAD,SACyCV,KAAKM,MAA9CC,EADA,EACAA,MAAOC,EADP,EACOA,aAAcE,EADrB,EACqBA,IAAKD,EAD1B,EAC0BA,YAC1BoB,EAAW7B,KAAKC,MAAhB4B,QACHC,EAASrB,EAAYe,KAAI,SAACC,EAAKC,GAAN,OAC3B,yBACEK,UAAU,mBACVC,IAAG,qBAAgBN,IAEnB,+BAAQA,EAAE,EAAV,IACE,2BACEO,KAAK,OACLd,KAAI,qBAAgBO,GACpBN,MAAOK,EACPS,KAAM,GACNC,aAAa,MACbC,YAAY,cACZC,SAAU,EAAKvB,uBAKvB,OACE,yBAAKiB,UAAU,yBACb,0BAAMA,UAAU,cAAcO,SAAUtC,KAAKe,cAC3C,4BACEkB,KAAK,SACLF,UAAU,eACVhC,QAAS8B,GAHX,KAOA,yBAAKE,UAAU,oBACb,2BAAOQ,QAAQ,sBAAf,SACA,2BACEC,GAAG,qBACHR,IAAI,QACJb,KAAK,QACLc,KAAK,OACLb,MAAOb,EACP2B,KAAM,GACNC,aAAa,MACbE,SAAUrC,KAAKW,gBAEnB,2BACE4B,QAAQ,4BACRE,MAAO,CAACC,UAAW,QAFrB,gBAMA,8BACEV,IAAI,eACJQ,GAAG,4BACHP,KAAK,eACLd,KAAK,eACLwB,KAAK,IACLC,KAAK,KACLT,aAAa,MACbf,MAAOZ,EACP6B,SAAUrC,KAAKW,eAChBmB,EACD,4BACEG,KAAK,SACLlC,QAASC,KAAKa,oBACdkB,UAAU,WAHZ,KAOA,yBAAKA,UAAU,oBACb,2BAAOQ,QAAQ,oBAAf,aACA,2BACEC,GAAG,mBACHP,KAAK,OACLG,YAAY,GACZjB,KAAK,MACLC,MAAOV,EACPwB,KAAM,GACNC,aAAa,MACbE,SAAUrC,KAAKW,gBAEnB,4BACEsB,KAAK,SACLF,UAAU,UACVU,MAAO,CAACI,UAAW,WAAYC,YAAa,IAH9C,c,GAhIgB3C,cAApBE,EACGD,aAAe,CACpByB,QADoB,aAEpBD,OAFoB,cA4ITvB,QCzGA0C,G,6KAzBH,IAAD,EAC0C/C,KAAKC,MAA/CM,EADA,EACAA,MAAOG,EADP,EACOA,IAAKF,EADZ,EACYA,aAAcgC,EAD1B,EAC0BA,GAAIQ,EAD9B,EAC8BA,SAC/BvC,EAAcT,KAAKC,MAAMQ,YAAYe,KAAI,SAACC,EAAKJ,GAAN,OAC7C,wBAAIW,IAAKX,GAAQI,MAEnB,OACE,yBAAKM,UAAU,eACb,yBAAKA,UAAU,mBACb,yBAAKkB,IAAKvC,EAAKwC,IAAK3C,KAEtB,yBAAKwB,UAAU,uBACb,wBAAIA,UAAU,gBAAgBxB,GAC9B,4CACA,4BACGE,GAEH,6CACA,2BAAID,GACJ,4BAAQyB,KAAK,SAASlC,QAAS,kBAAMiD,EAASR,KAA9C,gB,GA5BWrC,cCsBNgD,G,6KAfH,IACDH,EAAYhD,KAAKC,MAAjB+C,SACDI,EAAUpD,KAAKC,MAAMmD,QAAQ5B,KAAI,SAAC6B,EAAEhC,GAAH,OACrC,kBAAC,EAAD,eAAQW,IAAKqB,EAAEb,IAAQa,EAAvB,CAA0BL,SAAUA,QAGtC,OACE,yBAAKjB,UAAU,eACZqB,O,GAdgBjD,cCqEVmD,G,wDAnEb,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACX8C,QAAS,CACP,CACEZ,GAAI,EACJjC,MAAO,YACPC,aAAc,+GACdC,YAAa,CAAC,QAAS,eAAgB,mBACvCC,IAAK,iBAEP,CACE8B,GAAI,EACJjC,MAAO,YACPC,aAAc,kDACdC,YAAa,CAAC,qBAAsB,iBACpCC,IAAK,iBAEP,CACE8B,GAAI,EACJjC,MAAO,gBACPC,aAAc,wFACdC,YAAa,CAAC,oBAAqB,YAAa,yBAA0B,kBAAmB,UAC7FC,IAAK,sBAGT6C,aAAc,EACdC,UAAU,GAGZ,EAAKC,WAAa,EAAKA,WAAW7C,KAAhB,gBAClB,EAAKoC,SAAW,EAAKA,SAASpC,KAAd,gBA/BC,E,uDAkCR8C,GAAS,IAAD,OACjB1D,KAAKiB,UAAS,SAAC0C,EAAW1D,GACxB,IAAM2D,EAAS,eAAOF,EAAP,CAAelB,GAAI,EAAKlC,MAAMiD,eAC7C,MAAO,CACLA,aAAcI,EAAUJ,aAAe,EACvCH,QAAQ,GAAD,mBAAM,EAAK9C,MAAM8C,SAAjB,CAA0BQ,IACjCJ,UAAU,Q,+BAKPhB,GACP,IAAMY,EAAUpD,KAAKM,MAAM8C,QAAQS,QAAO,SAAAR,GAAC,OAAIA,EAAEb,KAAOA,KACxDxC,KAAKiB,SAAS,CAACmC,c,+BAGP,IAAD,OACAI,EAAYxD,KAAKM,MAAjBkD,SACP,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,CAAQ7B,YAAa,kBAAM,EAAKe,SAAS,CAACuC,UAAU,OAClDA,EACE,kBAAC,EAAD,CACE5B,OAAQ5B,KAAKyD,WACb5B,QAAS,kBAAM,EAAKZ,SAAS,CAACuC,UAAU,OAE1C,KACJ,kBAAC,EAAD,CAAYR,SAAUhD,KAAKgD,SAAUI,QAASpD,KAAKM,MAAM8C,e,GA9DzCjD,cCIlB2D,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtE,QACfgE,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,SDcxC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,eAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,eAAN,sBAEN3B,EAwCX,SAAiCO,GAE/BuB,MAAMvB,GACHI,MAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,MAAK,SAAAC,GACjCA,EAAayB,aAAa1B,MAAK,WAC7BT,OAAOC,SAASmC,eAKpBhC,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEAzDAoB,CAAwBhC,GAHxBD,EAAgBC,OC7BxBiC,K","file":"static/js/main.c7a729be.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n  static defaultProps = {\n    onNewRecipe() {}\n  }\n  \n  static propTypes = {\n    onNewRecipe: PropTypes.func\n  }\n  \n  render() {\n    return (\n      <header>\n        <h2><a>Recipe App</a></h2>\n        <nav>\n          <li><a onClick={this.props.onNewRecipe}>New Recipe</a></li>\n          <li><a>Home</a></li>\n          <li><a>About</a></li>\n          <li><a>Contact Us</a></li>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport './RecipeInput.css';\n\nclass RecipeInput extends Component {\n  static defaultProps = {\n    onClose() {},\n    onSave() {}\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      instructions: \"\",\n      ingredients: [''],\n      img: ''\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleNewIngredient = this.handleNewIngredient.bind(this);\n    this.handleChangeIng = this.handleChangeIng.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n  \n  handleNewIngredient(e) {\n    const {ingredients} = this.state;\n    this.setState({ingredients: [...ingredients, '']});\n  }\n  \n  handleChangeIng(e) {\n    const index = Number(e.target.name.split('-')[1]);\n    const ingredients = this.state.ingredients.map((ing, i) => (\n      i === index ? e.target.value : ing\n    ));\n    this.setState({ingredients});\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSave({...this.state});\n    this.setState({\n      title: '',\n      instructions: '',\n      ingredients: [''],\n      img: ''\n    })\n  }\n  \n  render() {\n    const {title, instructions, img, ingredients} = this.state;\n    const {onClose} = this.props;\n    let inputs = ingredients.map((ing, i) => (\n      <div\n        className=\"recipe-form-line\"\n        key={`ingredient-${i}`}\n      >\n        <label>{i+1}.\n          <input\n            type=\"text\"\n            name={`ingredient-${i}`}\n            value={ing}\n            size={45}\n            autoComplete=\"off\"\n            placeholder=\" Ingredient\"\n            onChange={this.handleChangeIng} />\n        </label>\n      </div>\n    ));\n    \n    return (\n      <div className=\"recipe-form-container\">\n        <form className='recipe-form' onSubmit={this.handleSubmit}>\n          <button\n            type=\"button\"\n            className=\"close-button\"\n            onClick={onClose}\n          >\n            X\n          </button>\n          <div className='recipe-form-line'>\n            <label htmlFor='recipe-title-input'>Title</label>\n            <input\n              id='recipe-title-input'\n              key='title'\n              name='title'\n              type='text'\n              value={title}\n              size={42}\n              autoComplete=\"off\"\n              onChange={this.handleChange}/>\n          </div>\n          <label\n            htmlFor='recipe-instructions-input'\n            style={{marginTop: '5px'}}\n          >\n            Instructions\n          </label>\n          <textarea\n            key='instructions'\n            id='recipe-instructions-input'\n            type='Instructions'\n            name='instructions'\n            rows='8'\n            cols='50'\n            autoComplete='off'\n            value={instructions}\n            onChange={this.handleChange}/>\n          {inputs}\n          <button\n            type=\"button\"\n            onClick={this.handleNewIngredient}\n            className=\"buttons\"\n          >\n            +\n          </button>\n          <div className='recipe-form-line'>\n            <label htmlFor='recipe-img-input'>Image Url</label>\n            <input\n              id='recipe-img-input'\n              type='text'\n              placeholder=''\n              name='img'\n              value={img}\n              size={36}\n              autoComplete='off'\n              onChange={this.handleChange} />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"buttons\"\n            style={{alignSelf: 'flex-end', marginRight: 0}}\n          >\n            SAVE\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default RecipeInput;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './Recipe.css';\n\nclass Recipe extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    ingredients: PropTypes.arrayOf(PropTypes.string).isRequired,\n    instructions: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    onDelete: PropTypes.func.isRequired\n  }\n  \n  render() {\n    const {title, img, instructions, id, onDelete} = this.props;\n    const ingredients = this.props.ingredients.map((ing, index) => (\n      <li key={index}>{ing}</li> \n    ));\n    return (\n      <div className=\"recipe-card\">\n        <div className=\"recipe-card-img\">\n          <img src={img} alt={title} />\n        </div>\n        <div className=\"recipe-card-content\">\n          <h3 className=\"recipe-title\">{title}</h3>\n          <h4>Ingredients:</h4>\n          <ul>\n            {ingredients}\n          </ul>\n          <h4>Instructions:</h4>\n          <p>{instructions}</p>\n          <button type=\"button\" onClick={() => onDelete(id)}>DELETE</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recipe;","import React, {Component} from 'react';\nimport Recipe from './Recipe';\nimport PropTypes from 'prop-types';\nimport './RecipeList.css';\n\nclass RecipeList extends Component {\n  static propTypes = {\n    recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDelete: PropTypes.func.isRequired\n  }\n  \n  render() {\n    const {onDelete} = this.props;\n    const recipes = this.props.recipes.map((r,index) => (\n      <Recipe key={r.id} {...r} onDelete={onDelete} />\n    ));\n    \n    return (\n      <div className=\"recipe-list\">\n        {recipes}\n      </div>\n    )\n  \n  }\n}\n\nexport default RecipeList;","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport RecipeInput from './RecipeInput';\nimport RecipeList from './RecipeList';\nimport './RecipeApp.css';\n\nclass RecipeApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [\n        {\n          id: 0,\n          title: \"Spaghetti\",\n          instructions: \"Open jar of Spaghetti sauce.  Bring to simmer.  Boil water.  Cook pasta until done.  Combine pasta and sauce\",\n          ingredients: [\"pasta\", \"8 cups water\", \"1 box spaghetti\"],\n          img: \"spaghetti.jpg\"\n        },\n        {\n          id: 1,\n          title: \"Milkshake\",\n          instructions: \"Combine ice cream and milk.  Blend until creamy\",\n          ingredients: [\"2 Scoops Ice cream\", \"8 ounces milk\"],\n          img: \"milkshake.jpg\"\n        },\n        { \n          id: 2,\n          title: \"Avocado Toast\",\n          instructions: \"Toast bread.  Slice avocado and spread on bread.  Add salt, oil, and pepper to taste.\",\n          ingredients: [\"2 slices of bread\", \"1 avocado\", \"1 tablespoon olive oil\", \"1 pinch of salt\", \"pepper\"],\n          img: \"avocado_toast.jpg\"\n        }\n      ],\n      nextRecipeId: 3,\n      showForm: false\n    }\n    \n    this.handleSave = this.handleSave.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n  }\n  \n  handleSave(recipe) {\n    this.setState((prevState, props) => {\n      const newRecipe = {...recipe, id: this.state.nextRecipeId};\n      return {\n        nextRecipeId: prevState.nextRecipeId + 1,\n        recipes: [...this.state.recipes, newRecipe],\n        showForm: false\n      }\n    });\n  }\n  \n  onDelete(id) {\n    const recipes = this.state.recipes.filter(r => r.id !== id);\n    this.setState({recipes});\n  }\n  \n  render() {\n    const {showForm} = this.state;\n    return (\n      <div className=\"App\">\n        <Navbar onNewRecipe={() => this.setState({showForm: true})} />\n        { showForm ?\n            <RecipeInput \n              onSave={this.handleSave}\n              onClose={() => this.setState({showForm: false})}  \n            /> :\n            null }\n        <RecipeList onDelete={this.onDelete} recipes={this.state.recipes} />\n      </div>\n    );\n  }\n}\n\nexport default RecipeApp;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RecipeApp from './RecipeApp';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<RecipeApp />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}